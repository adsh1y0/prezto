# Executes commands at the start of an interactive session.
#
# Authors:
#   Yutaka Yoshida <adsh1y0@gmail.com>
#

###########
# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

unsetopt CORRECT
setopt MAGIC_EQUAL_SUBST

# Recent dirs handling
# Use cdr & friends. See http://zsh.sourceforge.net/Doc/Release/User-Contributions.html#Recent-Directories
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':completion:*' recent-dirs-insert both
zstyle ':chpwd:*' recent-dirs-max 500
zstyle ':chpwd:*' recent-dirs-default true
zstyle ':chpwd:*' recent-dirs-file "$HOME/.cache/shell/chpwd-recent-dirs"
zstyle ':chpwd:*' recent-dirs-pushd true

### general settings.
export LANG=ja_JP.UTF-8
export EDITOR=vim
set -o emacs

### zsh history settings
export HISTSIZE=1000
export SAVEHIST=100000
setopt hist_ignore_dups
setopt EXTENDED_HISTORY
setopt hist_ignore_all_dups 
setopt hist_ignore_space
setopt hist_save_no_dups
setopt hist_no_store

### alias & env
case ${OSTYPE} in
  darwin*)
    alias vim="/Applications/MacVim.app/Contents/MacOS/Vim"
    alias mvim="/Applications/MacVim.app/Contents/MacOS/mvim"
    ;;
  linux*)
    set -o emacs

		if [ -d "$HOME/.linuxbrew" ]; then
			export PATH=$HOME/.linuxbrew/bin:$PATH
			export MANPATH=$HOME/.linuxbrew/share/man:$MANPATH
			export INFOPATH=$HOME/.linuxbrew/share/info:$INFOPATH
			export XDG_DATA_DIRS=$HOME/.linuxbrew/share:$XDG_DATA_DIRS
		fi

    ;;
esac

# nvm
if [ -d "$HOME/.nvm" ]; then
	# manual install.
	export NVM_DIR="$HOME/.nvm"
	[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" 
fi

# sdkman
if [ -d "$HOME/.sdkman" ]; then
	#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
	export SDKMAN_DIR="$HOME/.sdkman"
	setopt clobber
	[[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"
	setopt noclobber
fi

# go
# if [ -d "$HOME/.go" ]; then
# 	export GOPATH=$HOME/.go
# 	export PATH=$PATH:$GOPATH/bin
# fi

# if [ -d "$HOME/.pyenv" ]; then
# 	export PYENV_ROOT=$HOME/.pyenv
# 	export PATH="$PYENV_ROOT/bin:$PATH"
# 	eval "$(pyenv init -)"
# 	eval "$(pyenv virtualenv-init -)"
# fi

# rbenv
if [ -d "$HOME/.anyenv" ]; then
	export PATH="$HOME/.anyenv/bin:$PATH"
	eval "$(anyenv init -)"
fi

# java
export _JAVA_OPTIONS="-Dfile.encoding=UTF-8"

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

if [ -d "$HOME/.ghq/github.com/mollifier/anyframe" ]; then

	fpath=("$HOME/.ghq/github.com/mollifier/"anyframe(N-/) $fpath)
	autoload -Uz anyframe-init
	anyframe-init
	bindkey '^p' anyframe-widget-cdr
	bindkey '^xp' anyframe-widget-put-history
	bindkey '^r' anyframe-widget-execute-history
	bindkey '^]' anyframe-widget-cd-ghq-repository
	bindkey '^\' anyframe-widget-tmux-attach
	bindkey '^xb' anyframe-widget-checkout-git-branch
	bindkey '^xk' anyframe-widget-kill

	# zstyle ":anyframe:selector:" use peco
	zstyle ":anyframe:selector:" use fzf
	zstyle ":anyframe:selector:fzf:" command 'fzf --extended'

fi

# 環境依存設定
if [ -f "$HOME/.zshrc.env" ]; then
  source "$HOME/.zshrc.env"
fi
