# Executes commands at the start of an interactive session.
#
# Authors:
#   Yutaka Yoshida <adsh1y0@gmail.com>
#

###########
# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Recent dirs handling
# Use cdr & friends. See http://zsh.sourceforge.net/Doc/Release/User-Contributions.html#Recent-Directories
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':completion:*' recent-dirs-insert both
zstyle ':chpwd:*' recent-dirs-max 500
zstyle ':chpwd:*' recent-dirs-default true
zstyle ':chpwd:*' recent-dirs-file "$HOME/.cache/shell/chpwd-recent-dirs"
zstyle ':chpwd:*' recent-dirs-pushd true

### general settings.
export LANG=ja_JP.UTF-8
export EDITOR=vim

### alias & env
case ${OSTYPE} in
  darwin*)
		set -o emacs
    alias vim="/Applications/MacVim.app/Contents/MacOS/Vim"
    alias mvim="/Applications/MacVim.app/Contents/MacOS/mvim"
    ;;
  linux*)
    ;;
esac

# nvm
if [ -d "$HOME/.nvm" ]; then
	# manual install.
	export NVM_DIR="$HOME/.nvm"
	[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" 
fi

# sdkman
if [ -d "$HOME/.sdkman" ]; then
	#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
	export SDKMAN_DIR="$HOME/.sdkman"
	[[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"
fi

# go
# if [ -d "$HOME/.go" ]; then
# 	export GOPATH=$HOME/.go
# 	export PATH=$PATH:$GOPATH/bin
# fi
#


# rbenv
if [ -d "$HOME/.rbenv" ]; then
	eval "$(rbenv init -)"
fi

if [ -d "$HOME/.pyenv" ]; then
	eval "$(pyenv init -)"
fi

###########
# peco
function exists { which $1 &> /dev/null }
if exists peco; then

	function peco-select-history () {
			local tac
			exists gtac && tac="gtac" || { exists tac && tac="tac" || { tac="tail -r" } }
			BUFFER=$(fc -l -n 1 | eval $tac | peco --query "$LBUFFER")
			CURSOR=$#BUFFER         # move cursor
			zle -R -c               # refresh
	}
	zle -N peco-select-history
	bindkey '^R' peco-select-history
		
	function peco-cdr () {
		local selected_dir=$(cdr -l | awk '{ print $2 }' | peco)
		if [ -n "$selected_dir" ]; then
			BUFFER="cd ${selected_dir}"
			zle accept-line
		fi
		zle clear-screen
	} 
	zle -N peco-cdr
	bindkey '^p' peco-cdr

	function peco-pt-searcher () {
		vim $(pt $@ | peco --query "$LBUFFER" | awk -F : '{print "-c " $2 " " $1}')
	}

	function agvim () {
		vim $(ag $@ | peco --query "$LBUFFER" | awk -F : '{print "-c " $2 " " $1}')
	}
	
	function peco-src () {
		local selected_dir=$(ghq list -p | peco --query "$LBUFFER")
		if [ -n "$selected_dir" ]; then
			BUFFER="cd ${selected_dir}"
			zle accept-line
		fi
		zle clear-screen
	}
	zle -N peco-src
	bindkey '^]' peco-src

fi

########################################
# java
export _JAVA_OPTIONS="-Dfile.encoding=UTF-8"

########################################
# 環境依存設定
if [ -f "$HOME/.zshrc.env" ]; then
  source "$HOME/.zshrc.env"
fi

